name: Bonyan

services:
  postgresdb:
    container_name: postgres
    hostname: postgres
    image: postgres:16
    ports:
      - "5432:${DATABASE_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_PORT=${DATABASE_PORT}
    networks:
      - default

  redis:
    container_name: redis
    hostname: redis
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - default
    command: redis-server --appendonly yes


  django_app:
    container_name: django_app
    build:
      context: .
      dockerfile: Dockerfile
    # environment:
      # - ENV=.env
      # - DATABASE_NAME=${DATABASE_NAME}
      # - DATABASE_USER=${DATABASE_USER}
      # - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      # - DATABASE_PORT=${DATABASE_PORT}
      # - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      # - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    ports:
      - "3000:80"
    depends_on:
      - postgresdb
      - redis
    networks:
      - default
    command: bash /app/entrypoints/backend_entrypoint.sh
    volumes:
      - django_data:/app/media

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A bonyanProject worker --loglevel=info
    # environment:
      # - ENV=.env
      # - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      # - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - django_app
      - redis
    networks:
      - default

volumes:
  postgres_data:
    name: postgres_data
  redis_data:
    name: redis_data
  django_data:
    name: django_data

networks:
  default:
    name: Bonyan-network