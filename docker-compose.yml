version: "3.8"
services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - backend

  api:
    container_name: api
    hostname: api
    restart: unless-stopped
    build:
      context: ./bonyan
      dockerfile: api.Dockerfile
    env_file:
      - ./bonyan/.env
    volumes:
      - static_data:/app/static
    depends_on:
      - postgres
    command: bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn project.wsgi --bind 0.0.0.0:80 --reload"
    networks:
      - backend

  dockerized_terminal:
    container_name: dockerized_terminal
    hostname: dockerized_terminal
    restart: unless-stopped
    build:
      context: ./dockerized_terminal
      dockerfile: Dockerfile
    env_file:
      - ./dockerized_terminal/.env
    command: gunicorn --worker-class eventlet -w 1 app:app --bind 0.0.0.0:5000
    networks:
      - backend

  maat_static:
    container_name: maat_static
    hostname: maat_static
    restart: unless-stopped
    build:
      context: ./MAAT_Static
      dockerfile: Dockerfile
    env_file:
      - ./MAAT_Static/.env
    command: gunicorn run:app --bind 0.0.0.0:8080
    networks:
      - backend

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "8000:80"  # Expose only nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - dockerized_terminal
      - maat_static
    networks:
      - frontend
      - backend

volumes:
  static_data: {}
  postgres_data: {}

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
